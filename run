#!/usr/bin/python3
import os 
import sys
import argparse
import importlib


# Contrived example of generating a module named as a string
# full_module_name = "mypackage." + "mymodule"

# # The file gets executed upon import, as expected.
# mymodule = importlib.import_module(full_module_name)

PACKAGE_NAME = 'PersonalFinanceCLI'
LAMBDA_CODE_PATH = PACKAGE_NAME.join(os.getcwd().split(PACKAGE_NAME)[:-1])
VENV_SITE_PACKAGES = LAMBDA_CODE_PATH + PACKAGE_NAME + "/env/lib/python3.9/site-packages"
sys.path.append(LAMBDA_CODE_PATH)
sys.path.append(VENV_SITE_PACKAGES)

from PersonalFinanceCLI.script_map import __bind_scripts
from PersonalFinanceCLI.models.arguments.BaseArgument import BaseArgument

COMMAND_MODULE_LOCATION = "PersonalFinanceCLI.commands"

def run_script(args):
    subcommand_name = args[0].command_name
    if args[0].show_help:
        args[1].append('-h')
    if subcommand_name in __bind_scripts:
        subcommand_module = __bind_scripts[subcommand_name]
        subcommand_full_module = "%s.%s"%(COMMAND_MODULE_LOCATION,subcommand_module)
        try:
            getattr(importlib.import_module(subcommand_full_module),subcommand_module)(args[1])._run()
            return
        except SystemExit as e:
            print(str(e))
            pass
        except Exception as e:
            print(str(e))
            pass
        return 
    print("Unable to find proper Mapping.. Exiting..")
    
parser = argparse.ArgumentParser(description='Argument Parser')
parser.add_argument("-i","--command",dest="command_name",help = "Run the specific command")
parser.add_argument("-s","--showhelp",dest="show_help",help = "Show help of the specific command",action="store_true")

run_script(parser.parse_known_args())
